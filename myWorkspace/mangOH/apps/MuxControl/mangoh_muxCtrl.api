//--------------------------------------------------------------------------------------------------
/**
 * @page c_muxCtrl Gpio Mux Control Definitions
 *
 * @ref mangoh_muxCtrl_interface.h "API Reference"
 *
 * <HR>
 *
 * The mangOH GPIO API is used by apps to control Mux Control.
 *
 * GPIO BSP service.
 *
 * This file defines mangOH MUx Control API control definitions.
 * The API includes UART1, SPI, UART2, PCM, SDIO, CODEC
 *
 * <HR>
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
/**
 * @file mangoh_muxCtrl_interface.h
 *
 * Legato @ref c_gpio include file.
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//-------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * Disable UART 1
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotAllUart1Off
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Enable UART 1 on IoT slot 0
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Iot0Uart1On
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Enable UART 1 on IoT slot 1
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Iot1Uart1On
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Disable SPI
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotAllSpiOff
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Enable SPI on IoT slot 0
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Iot0Spi1On
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Mux Control: mangOH IOT1 SPI1 ON.
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Iot1Spi1On
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Disable UART 2
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotAllUart2Off
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Enable UART 2 on IoT slot 2
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Iot2Uart2On
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Enable UART 2 on the debug port
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Uart2DebugOn
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Connect the SDIO interface to the MicroSD card slot
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t SdioSelMicroSd
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Connect the SDIO interface to IoT slot 0
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t SdioSelIot0
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Disable the audio path
 *
 * @return
 *      LE_OK on success or LE_FAULT on failure
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t AudioDisable
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Route audio via a codec installed in IoT slot 0
 *
 * @return
 *      LE_OK on success or LE_FAULT on failure
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t AudioSelectIot0Codec
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Route audio via the codec on the mangOH board
 *
 * @return
 *      LE_OK on success or LE_FAULT on failure
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t AudioSelectOnboardCodec
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Route audio via a codec internal to the CF3 module
 *
 * @return
 *      LE_OK on success or LE_FAULT on failure
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t AudioSelectInternalCodec
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Take IoT slot 0 card out of reset
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotSlot0DeassertReset
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Take IoT slot 1 card out of reset
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotSlot1DeassertReset
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Take IoT slot 2 card out of reset
 *
 * @return
 *      - LE_FAULT
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t IotSlot2DeassertReset
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Put Arduino in reset state
 *
 * @return
 *      - LE_FAULT
 *      - LE_UNSUPPORTED if the board doesn't have an Arduino
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t ArduinoAssertReset
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Put Arduino out of reset state
 *
 * @return
 *      - LE_FAULT
 *      - LE_UNSUPPORTED if the board doesn't have an Arduino
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t ArduinoDeassertReset
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Perform Arduino reset
 *
 * @return
 *      - LE_FAULT
 *      - LE_UNSUPPORTED if the board doesn't have an Arduino
 *      - LE_OK
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t ArduinoReset
(
);

