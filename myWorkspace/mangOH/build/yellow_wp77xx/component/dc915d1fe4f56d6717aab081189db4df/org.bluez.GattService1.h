/*
 * Generated by gdbus-codegen 2.54.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __ORG_BLUEZ_GATTSERVICE1_H__
#define __ORG_BLUEZ_GATTSERVICE1_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.bluez.GattService1 */

#define BLUEZ_TYPE_GATT_SERVICE1 (bluez_gatt_service1_get_type ())
#define BLUEZ_GATT_SERVICE1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), BLUEZ_TYPE_GATT_SERVICE1, BluezGattService1))
#define BLUEZ_IS_GATT_SERVICE1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), BLUEZ_TYPE_GATT_SERVICE1))
#define BLUEZ_GATT_SERVICE1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), BLUEZ_TYPE_GATT_SERVICE1, BluezGattService1Iface))

struct _BluezGattService1;
typedef struct _BluezGattService1 BluezGattService1;
typedef struct _BluezGattService1Iface BluezGattService1Iface;

struct _BluezGattService1Iface
{
  GTypeInterface parent_iface;

  const gchar * (*get_device) (BluezGattService1 *object);

  guint16  (*get_handle) (BluezGattService1 *object);

  gboolean  (*get_primary) (BluezGattService1 *object);

  const gchar * (*get_uuid) (BluezGattService1 *object);

};

GType bluez_gatt_service1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *bluez_gatt_service1_interface_info (void);
guint bluez_gatt_service1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus property accessors: */
const gchar *bluez_gatt_service1_get_uuid (BluezGattService1 *object);
gchar *bluez_gatt_service1_dup_uuid (BluezGattService1 *object);
void bluez_gatt_service1_set_uuid (BluezGattService1 *object, const gchar *value);

gboolean bluez_gatt_service1_get_primary (BluezGattService1 *object);
void bluez_gatt_service1_set_primary (BluezGattService1 *object, gboolean value);

const gchar *bluez_gatt_service1_get_device (BluezGattService1 *object);
gchar *bluez_gatt_service1_dup_device (BluezGattService1 *object);
void bluez_gatt_service1_set_device (BluezGattService1 *object, const gchar *value);

guint16 bluez_gatt_service1_get_handle (BluezGattService1 *object);
void bluez_gatt_service1_set_handle (BluezGattService1 *object, guint16 value);


/* ---- */

#define BLUEZ_TYPE_GATT_SERVICE1_PROXY (bluez_gatt_service1_proxy_get_type ())
#define BLUEZ_GATT_SERVICE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), BLUEZ_TYPE_GATT_SERVICE1_PROXY, BluezGattService1Proxy))
#define BLUEZ_GATT_SERVICE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), BLUEZ_TYPE_GATT_SERVICE1_PROXY, BluezGattService1ProxyClass))
#define BLUEZ_GATT_SERVICE1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), BLUEZ_TYPE_GATT_SERVICE1_PROXY, BluezGattService1ProxyClass))
#define BLUEZ_IS_GATT_SERVICE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), BLUEZ_TYPE_GATT_SERVICE1_PROXY))
#define BLUEZ_IS_GATT_SERVICE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), BLUEZ_TYPE_GATT_SERVICE1_PROXY))

typedef struct _BluezGattService1Proxy BluezGattService1Proxy;
typedef struct _BluezGattService1ProxyClass BluezGattService1ProxyClass;
typedef struct _BluezGattService1ProxyPrivate BluezGattService1ProxyPrivate;

struct _BluezGattService1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  BluezGattService1ProxyPrivate *priv;
};

struct _BluezGattService1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType bluez_gatt_service1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BluezGattService1Proxy, g_object_unref)
#endif

void bluez_gatt_service1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
BluezGattService1 *bluez_gatt_service1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
BluezGattService1 *bluez_gatt_service1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void bluez_gatt_service1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
BluezGattService1 *bluez_gatt_service1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
BluezGattService1 *bluez_gatt_service1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define BLUEZ_TYPE_GATT_SERVICE1_SKELETON (bluez_gatt_service1_skeleton_get_type ())
#define BLUEZ_GATT_SERVICE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), BLUEZ_TYPE_GATT_SERVICE1_SKELETON, BluezGattService1Skeleton))
#define BLUEZ_GATT_SERVICE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), BLUEZ_TYPE_GATT_SERVICE1_SKELETON, BluezGattService1SkeletonClass))
#define BLUEZ_GATT_SERVICE1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), BLUEZ_TYPE_GATT_SERVICE1_SKELETON, BluezGattService1SkeletonClass))
#define BLUEZ_IS_GATT_SERVICE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), BLUEZ_TYPE_GATT_SERVICE1_SKELETON))
#define BLUEZ_IS_GATT_SERVICE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), BLUEZ_TYPE_GATT_SERVICE1_SKELETON))

typedef struct _BluezGattService1Skeleton BluezGattService1Skeleton;
typedef struct _BluezGattService1SkeletonClass BluezGattService1SkeletonClass;
typedef struct _BluezGattService1SkeletonPrivate BluezGattService1SkeletonPrivate;

struct _BluezGattService1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  BluezGattService1SkeletonPrivate *priv;
};

struct _BluezGattService1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType bluez_gatt_service1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BluezGattService1Skeleton, g_object_unref)
#endif

BluezGattService1 *bluez_gatt_service1_skeleton_new (void);


G_END_DECLS

#endif /* __ORG_BLUEZ_GATTSERVICE1_H__ */
