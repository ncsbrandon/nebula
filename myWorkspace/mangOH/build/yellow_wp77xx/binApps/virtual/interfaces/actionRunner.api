//--------------------------------------------------------------------------------------------------
/**
 * @page c_actionRunner Action Runner API
 *
 *
 * Receiving the output of a script
 *
 * Clients register a callback to be called when certain script output becomes available.  The
 * registration function accepts a path argument which is used to match against tag-value pairs
 * in the script output.
 *
 * - actionRunner_AddJsonPushHandler(string path IN, ///< [IN] Tag to match script output
 *                                   actionRunner_JsonPushHandlerFunc_t callbackPtr,
 *                                   void* contextPtr
 *
 *
 * Copyright (C) Sierra Wireless Inc.
 */
//--------------------------------------------------------------------------------------------------

DEFINE STRING_ACTION_ID_LEN_MAX       =  127;
DEFINE STRING_ACTION_JS_LEN_MAX       = 32768;
DEFINE STRING_ACTION_SRC_LEN_MAX      =  127;

DEFINE STRING_JSON_PUSH_DEST_LEN_MAX  =   31;
DEFINE STRING_JSON_PUSH_PATH_LEN_MAX  =  127;
DEFINE STRING_JSON_PUSH_VAL_LEN_MAX   = 50000;

DEFINE STRING_JS_OUTPUT_KEY_DATAHUB   = "dh";
DEFINE STRING_JS_OUTPUT_KEY_DEBUG     = "debug";

//--------------------------------------------------------------------------------------------------
/**
 * 
 * @return
 *  - LE_OK if successful
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t CreateAction
(
    string id[STRING_ACTION_ID_LEN_MAX] IN
);


//--------------------------------------------------------------------------------------------------
/**
 * Handler for pushing data result.
 */
//--------------------------------------------------------------------------------------------------
HANDLER CallbackResult
(
    le_result_t status IN
);


//--------------------------------------------------------------------------------------------------
/**
 * Set JavaScript
 *
 * @return
 *  - LE_OK if successful
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t SetJS
(
    string id[STRING_ACTION_ID_LEN_MAX] IN,
    file js IN,
    CallbackResult handler
);


//--------------------------------------------------------------------------------------------------
/**
 * 
 * @return
 *  - LE_OK if successful
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t SetSource
(
    string id[STRING_ACTION_ID_LEN_MAX] IN,
    string topic[STRING_ACTION_SRC_LEN_MAX] IN
);


//--------------------------------------------------------------------------------------------------
/**
 * 
 * @return
 *  - LE_OK if successful
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t SetEnabled
(
    string id[STRING_ACTION_ID_LEN_MAX] IN,
    bool enabled IN
);


//--------------------------------------------------------------------------------------------------
/**
 * 
 * @return
 *  - LE_OK if successful
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t RemoveAction
(
    string id[STRING_ACTION_ID_LEN_MAX] IN
);


//--------------------------------------------------------------------------------------------------
/**
 * Callback function for pushing JSON objects to an output
 */
//--------------------------------------------------------------------------------------------------
HANDLER JsonPushHandler
(
    double timestamp IN,///< Timestamp in seconds since the Epoch 1970-01-01 00:00:00 +0000 (UTC)
    string path[STRING_JSON_PUSH_PATH_LEN_MAX] IN,
    string value[STRING_JSON_PUSH_VAL_LEN_MAX] IN
);


//--------------------------------------------------------------------------------------------------
/*
 * Causes the AddJsonPushHandler() and RemoveJsonPushHandler() functions
 * to be generated by the Legato build tools.
 */
//--------------------------------------------------------------------------------------------------
EVENT JsonPush
(
    string dest[STRING_JSON_PUSH_DEST_LEN_MAX] IN,///< Output path (key)
    JsonPushHandler callback
);
